# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: '3'
services:
  your-service:
    image: your-image:latest
    environment:
      - PORT=8080
      - HOST_NAME=18.139.208.34
      - NODE_ENV=production
      - DB_HOST=localhost
      - DB_PORT=3307
      - DB_PASSWORD=123456
      - DB_USER=root
      - DB_NAME=hoidanit
      - MONGO_URI=mongodb+srv://lenguyenthai123:lenguyenthai123@cluster0.ctwm4lc.mongodb.net/03-TASK-MANAGER?retryWrites=true&w=majority
      - MONGO_URI1=mongodb://localhost:8080
      - PRIVATE_KEY=MUHAHAHAHA
      - JWT_SECRET=MUHAHAHAHA
      - SESSION_SECRET=AHSCJKNSKDNC
      - MAIL_CLIENT_ID=1031803914366-8p2j6d3cfrkbknur6g370nubodhsv0ot.apps.googleusercontent.com
      - MAIL_CLIENT_SECRET=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
      - MAIL_REDIRECT_URI=https://developers.google.com/oauthplayground
      - MAIL_REFRESH_TOKEN=1//04gRYmK6oRkd1CgYIARAAGAQSNwF-L9Ircw3t-QbEv3O495-DpmbNGo3Z5RXlBNw3n8WTiMokjOH413-0d8A2R9whbZUDpCfL5bI
      - CLOUDINARY_URL=cloudinary://958512834993732:WwI76oZEzZo3P_LGr4epfHUkYRo@dfq7tgvs1
      - WEBSITE_URL=http://localhost:8080
      - GOOGLE_CLIENT_ID=498002644270-71vo57chpv1md4fk7vi62516jtmi2tcn.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_CLIENT_REDIRECT_URL=http://18.139.208.34:80/auth/google/callback
      - FACEBOOK_APP_ID=909019557403536
      - FACEBOOK_APP_SECRET=e66354eedd802e9865bdedf706c5326e
      - FACEBOOK_APP_REDIRECT_URL=http://localhost:8080/auth/facebook/callback
    ports:
      - "80:8080"


# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

