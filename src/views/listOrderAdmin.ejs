<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/assetsListOrderAdmin/styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/pagination.css">
    <link rel="stylesheet" href="\assets\styleViewAccountList.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>

    </style>
</head>

<body>
    <%- include('SideBarAdmin') -%>
        <div class="page-view-account-list">

            <div class="main--content">
                <div class="header--wrapper">
                    <div class="header--title">
                        <span>Primary</span>

                        <h2>View Order List</h2>
                    </div>
                    <div class="user--infor">
                        <select class="form-select" id="status_selection" aria-label="search User">
                            <option selected>Status</option>
                            <option value="Completed">COMPLETED</option>
                            <option value="Delivered">DELIVERED</option>
                            <option value="Delivering">DELIVERING</option>
                            <option value="Processing">PROCESSING</option>
                            <option value="Cancelled">CANCELLED</option>

                        </select>



                    </div>

                    <%- include('SortOrder') -%>

                </div>
                <div class="list-account-container">
                    <h3 class="main--title">List Order</h3>


                    <div class="table-container">
                        <table>
                            <thead>
                                <tr>
                                    <th scope="col">ORDER ID</th>
                                    <th scope="col">CUSTOMER</th>
                                    <th scope="col">DATE</th>
                                    <th scope="col">STATUS</th>
                                    <th scope="col">TOTAL</th>

                                </tr>
                            </thead>
                            <tbody id="list-account">

                                <% for (let i=0; i < orderList.docs.length; i++) { %>
                                    <tr class="order_element" onclick="loadDetailOrder('<%= orderList.docs[i]._id %>')"
                                        data-custom-value="<%= orderList.docs[i]._id %>">
                                        <td>
                                            <%= orderList.docs[i]._id %>
                                        </td>
                                        <td>
                                            <%= orderList.docs[i].fullname %>
                                        </td>
                                        <td>
                                            <%= orderList.docs[i].date %>
                                        </td>
                                        <td class="status text-center">
                                            <div class="text <%= orderList.docs[i].status.toLowerCase() %>">
                                                <%= orderList.docs[i].status %>
                                            </div>
                                        </td>
                                        <td>
                                            $<%= orderList.docs[i].total %>
                                        </td>
                                    </tr>
                                    <% } %>


                            </tbody>
                            <tfoot>

                            </tfoot>
                            </thead>
                        </table>
                    </div>
                    <div id="pagination-container"></div>
                </div>
            </div>

        </div>

        <script>
            var account = document.querySelector(".table-container");

            // load detail order
            // function loadDetailUser(userID) {
            //     // window.location.href = "/admin/accountdetail";
            //     window.location.href = `/admin/accountlist/${userID}`;
            // }
            const listOrder = document.querySelector("#list-account");
            async function loadOrderHtml(page) {
                const curUrl = new URL(window.location.href);
                const urlObjectPath = curUrl.pathname;
                const pathPaging = "/paging"
                curUrl.pathname = urlObjectPath + pathPaging;

                if (curUrl.searchParams.has('page')) {
                    curUrl.searchParams.set('page', page);
                } else {
                    curUrl.searchParams.append('page', page);
                }
                console.log(page)
                console.log(curUrl.pathname);
                await fetch(curUrl)
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then((data) => {
                        return data.orderList;

                    })
                    .then(function (data) {
                        let htmlContent = "";
                        console.log(data)
                        data.docs.forEach(element => {
                            const trimmedId = element._id.trim();
                            const validObjectId = trimmedId.replace(/\s/g, '');
                            htmlContent +=
                                `<tr class="order_element" onclick="loadDetailOrder('${validObjectId}')">
        <td>
           ${element._id}
        </td>
        <td>
            ${element.fullname}
        </td>
        <td>
            ${element.date}
        </td>
        <td class="status text-center">
            <div class="text ${element.status.toLowerCase()}">
                ${element.status}
            </div>
        </td>
        <td>
            ${element.total}
        </td>
    </tr>`;

                        });
                        listOrder.innerHTML = htmlContent;

                    }
                    )
            }
            // handle sort 

            const curUrl = new URL(window.location.href);
            document.addEventListener('DOMContentLoaded', async function () {

                let totalPages = 10;
                let currentPage = 1;



                const urlObjectPath = curUrl.pathname;
                const pathPaging = "/paging"

                curUrl.pathname = urlObjectPath + pathPaging;

                console.log(curUrl)
                await fetch(curUrl)
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then((data) => {

                        totalPages = data.orderList.totalPages;
                        return data;

                    })

                // Function to generate pagination HTML
                function generatePagination() {
                    const paginationContainer = document.getElementById('pagination-container');
                    paginationContainer.innerHTML = ''; // Clear previous content


                    for (let i = 1; i <= totalPages; i++) {

                        const paginationItem = document.createElement('li');
                        paginationItem.textContent = i;
                        paginationItem.className = 'pagination-item';
                        paginationItem.dataset.value = i;

                        // Add active class to the current page
                        if (i === currentPage) {

                            paginationItem.classList.add('active');
                        }

                        // Add click event listener to each pagination item
                        paginationItem.addEventListener('click', function () {
                            currentPage = i;

                            loadOrderHtml(i);
                            generatePagination(); // Re-generate pagination on click
                        });

                        paginationContainer.appendChild(paginationItem);

                    }
                }
                // Initial generation of pagination
                generatePagination();

            })
            //handle filter status
            const statusSelection = document.getElementById("status_selection");
            let curUrl1 = new URL(window.location.href);
            statusSelection.addEventListener("change", async function () {
                let searchSelectedValue = statusSelection.value;
                console.log(searchSelectedValue, searchSelectedValue)

                // Clear all existing search parameters
                curUrl1.searchParams.forEach((value, name) => {
                    curUrl1.searchParams.delete(name);
                });

                // Set or append the new search parameter
                if (curUrl1.searchParams.has('status')) {
                    curUrl1.searchParams.set('status', searchSelectedValue);
                } else {
                    curUrl1.searchParams.append('status', searchSelectedValue);
                }

                window.location.href = curUrl1.toString();
            });
            //handle load detail order
            function loadDetailOrder(orderID) {
                window.location.href = `/admin/orders/${orderID}`;
            }
        </script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
            integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
            crossorigin="anonymous"></script>

</body>

</html>