<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Dashboard Design</title>

    <link rel="stylesheet" href="/assetsDashboardAdmin/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Google chart -->

    </script>
</head>

<body>
    <%- include('SideBarAdmin') -%>
        <!-- dashboard -->
        <div id="dashboard">
            <div class="main--content">
                <div class="header--wrapper">
                    <div class="header--title">
                        <span>Primary</span>
                        <h2>Dashboard</h2>
                    </div>
                    <div class="user--infor">
                        <div class="search--box">
                            <i class="fa-solid fa-search"></i>
                            <input type="text" placeholder="Search">
                        </div>
                        <img src="https://omimultimarket.com/inc/style.lib/assets/images/login.png" alt="">

                    </div>

                </div>
                <!-- <div class="card--container">
                    <h3 class="main--title">Today's data</h3>
                    <div class="card--wrapper">
                        <div class="payment--card light-red">
                            <div class="card--header">
                                <div class="amount">
                                    <span class="title">
                                        Payment amount
                                    </span>
                                    <span class="amount-value">
                                        $500.00
                                    </span>
                                </div>
                                <i class="fas fa-dollar-sign icon"></i>
                            </div>

                            <span class="card-detail">**** **** **** 3484</span>
                        </div>
                        <div class="payment--card light-purple">
                            <div class="card--header">
                                <div class="amount">
                                    <span class="title">
                                        Payment order
                                    </span>
                                    <span class="amount-value">
                                        $200.00
                                    </span>
                                </div>
                                <i class="fas fa-list icon dark-purple"></i>
                            </div>

                            <span class="card-detail">**** **** **** 5542</span>
                        </div>
                        <div class="payment--card light-green">
                            <div class="card--header">
                                <div class="amount">
                                    <span class="title">
                                        Payment customer
                                    </span>
                                    <span class="amount-value">
                                        $350.00
                                    </span>
                                </div>
                                <i class="fas fa-users icon dark-green"></i>
                            </div>

                            <span class="card-detail">**** **** **** 8896</span>
                        </div>
                        <div class="payment--card light-blue">
                            <div class="card--header">
                                <div class="amount">
                                    <span class="title">
                                        Payment proceed
                                    </span>
                                    <span class="amount-value">
                                        $150.00
                                    </span>
                                </div>
                                <i class="fas fa-check icon dark-blue"></i>
                            </div>

                            <span class="card-detail">**** **** **** 7745</span>
                        </div>
                        <div class="tabular--wrapper">
                            <h3 class="main--title">
                                Finance data
                            </h3>
                            <div class="table-container">
                                <table>
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Transaction Type</th>
                                            <th>Descriptioin</th>
                                            <th>Amount</th>
                                            <th>Catagory</th>
                                            <th>Status</th>
                                            <th>Action</th>
                                        </tr>
                                    <tbody>
                                        <tr>
                                            <td>2023-11-01</td>
                                            <td>Expenses</td>
                                            <td>Office Supplies</td>
                                            <td>$250</td>
                                            <td>Office Expenses</td>
                                            <td>Pending</td>
                                            <td><button>Edit</button></td>
                                        </tr>
                                        <tr>
                                            <td>2023-11-01</td>
                                            <td>Expenses</td>
                                            <td>Office Supplies</td>
                                            <td>$250</td>
                                            <td>Office Expenses</td>
                                            <td>Pending</td>
                                            <td><button>Edit</button></td>
                                        </tr>
                                        <tr>
                                            <td>2023-11-01</td>
                                            <td>Expenses</td>
                                            <td>Office Supplies</td>
                                            <td>$250</td>
                                            <td>Office Expenses</td>
                                            <td>Pending</td>
                                            <td><button>Edit</button></td>
                                        </tr>
                                        <tr>
                                            <td>2023-11-01</td>
                                            <td>Expenses</td>
                                            <td>Office Supplies</td>
                                            <td>$250</td>
                                            <td>Office Expenses</td>
                                            <td>Pending</td>
                                            <td><button>Edit</button></td>
                                        </tr>
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="7">
                                                Total: $1,000
                                            </td>
                                        </tr>
                                    </tfoot>
                                    </thead>
                                </table>
                            </div>

                        </div>
                    </div>

                </div> -->
                <div class="sort-product-container">
                    <h3 class="main--title">Recurring Revenue Chart</h3>
                    <div class="wrapper-sort">
                        <form id="form-day" action="#" onsubmit="return handleSubmit()">
                            <label for="start-date">Start Date:</label>
                            <input type="date" id="start-date" name="start-date" required>

                            <label for="end-date">End Date:</label>
                            <input type="date" id="end-date" name="end-date" required>

                            <br><br>

                            <input type="submit" value="Submit">
                        </form>
                        <div class="col-8 col-xl-2 col-lg-2 col-sm-8 home_option_for_tax">
                            <select class="form-select" id="sort_selection" aria-label="Sort product">

                                <option value="day">Day</option>

                                <option value="month">Month</option>
                                <option value="year">Year</option>

                            </select>
                        </div>
                    </div>

                    <div class="wrapper-chart">
                        <canvas id="lineChart" width="600px" height="300px"></canvas>

                    </div>

                </div>
                <div class="sort-product-container">
                    <h3 class="main--title">Top 5 Revenue Chart</h3>
                    <div class="wrapper-sort">
                        <form id="form-day-top" action="#" onsubmit="return handleSubmitTop()">
                            <label for="start-date">Start Date:</label>
                            <input type="date" id="start-date-top" name="start-date" required>

                            <label for="end-date">End Date:</label>
                            <input type="date" id="end-date-top" name="end-date" required>

                            <br><br>

                            <input type="submit" value="Submit">
                        </form>
                        <!-- <div class="col-8 col-xl-2 col-lg-2 col-sm-8 home_option_for_tax">
                            <select class="form-select" id="sort_selection-top" aria-label="Sort product">

                                <option value="day">Day</option>

                                <option value="month">Month</option>
                                <option value="year">Year</option>

                            </select>
                        </div> -->
                    </div>

                    <div class="wrapper-chart">
                        <canvas id="myChart" width="400" height="200"></canvas>

                    </div>

                </div>
            </div>

        </div>


        <script>
            var lineChart;
            let selectedValue = "day";
            var columnChart;
            //   let selectedValueTop = "day";

            document.addEventListener('DOMContentLoaded', function () {
                var data = {
                    datasets: [{
                        label: 'Revenue',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 2,
                        data: [65, 59, 80, 81, 56, 55, 40, 30, 25, 20, 15, 10],
                    }]
                };

                var options = {
                    responsive: true,
                    scales: {
                        x: {
                            type: 'category',
                        },
                        y: {
                            beginAtZero: true,
                        }
                    }
                };

                var ctx = document.getElementById('lineChart').getContext('2d');
                lineChart = new Chart(ctx, {
                    type: 'line',
                    data: data,
                    options: options
                });

                var data1 = {
                    labels: [],
                    datasets: [{
                        label: 'Doanh Thu',
                        data: [],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                        ],
                        borderWidth: 1
                    }]
                };

                // Cấu hình biểu đồ
                var options = {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                };

                // Lấy thẻ canvas và vẽ biểu đồ
                var ctx = document.getElementById('myChart').getContext('2d');
                columnChart = new Chart(ctx, {
                    type: 'bar',
                    data: data1,
                    options: options
                });
                // Set giá trị mặc định cho các input date
                document.getElementById("start-date").value = "2022-01-01";
                document.getElementById("end-date").value = "2024-01-01";
                document.getElementById("start-date-top").value = "2022-01-01";
                document.getElementById("end-date-top").value = "2024-01-01";

                // Gọi hàm để lấy dữ liệu và vẽ chart
                handleSubmit();
                handleSubmitTop();
            });

            const sortSelection = document.getElementById("sort_selection");

            sortSelection.addEventListener("change", async function () {
                selectedValue = sortSelection.value;
            });

            function handleSubmit() {
                var startDate = new Date(document.getElementById("start-date").value);
                var endDate = new Date(document.getElementById("end-date").value);

                const fetchData = async () => {
                    try {
                        const response = await fetch(`/revenue/chart?type=${selectedValue}&startTime=${startDate}&endTime=${endDate}`, {
                            method: 'GET',
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }

                        const data = await response.json();

                        let chartData, labels;

                        if (selectedValue === "day") {
                            chartData = data.map(item => {
                                return {
                                    x: new Date(item._id.year, item._id.month - 1, item._id.day),
                                    y: item.total
                                };
                            });
                            labels = chartData.map(item => item.x.toDateString());
                        } else if (selectedValue === "month") {
                            chartData = data.map(item => {
                                return {
                                    x: new Date(item._id.year, item._id.month, 0),
                                    y: item.total
                                };
                            });
                            labels = chartData.map(item => item.x.toDateString());
                        } else if (selectedValue === "year") {
                            chartData = data.map(item => {
                                return {
                                    x: new Date(item._id.year, 0, 0), // January of the year
                                    y: item.total
                                };
                            });
                            labels = chartData.map(item => item.x.toDateString());
                        }

                        // Update the existing dataset
                        var existingDataset = lineChart.data.datasets[0];
                        existingDataset.label = 'Revenue';
                        existingDataset.backgroundColor = 'rgba(255, 99, 132, 0.2)';
                        existingDataset.borderColor = 'rgba(255, 99, 132, 1)';
                        existingDataset.borderWidth = 2;
                        existingDataset.data = chartData;

                        // Update the labels for the x-axis
                        lineChart.data.labels = labels;

                        // Update the chart
                        lineChart.update();
                    } catch (error) {
                        console.error('Error fetching data:', error.message);
                    }
                }

                fetchData();

                return false;
            }
            const sortSelectionTop = document.getElementById("sort_selection-top");

            // sortSelectionTop.addEventListener("change", async function () {
            //     selectedValueTop = sortSelection.value;
            // });

            function handleSubmitTop() {
                var startDateTop = new Date(document.getElementById("start-date-top").value);
                var endDateTop = new Date(document.getElementById("end-date-top").value);

                const fetchDataTop = async () => {
                    try {
                        const response = await fetch(`/revenue/top?startTime=${startDateTop}&endTime=${endDateTop}`, {
                            method: 'GET',
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }

                        const data = await response.json();

                        let chartData, labels;

                        // Extract data for the chart
                        chartData = data.map(item => ({
                            x: item.productName,
                            y: item.totalRevenue
                        }));
                        labels = chartData.map(item => item.x);

                        // Nếu biểu đồ chưa được tạo, hãy tạo nó
                        if (!columnChart) {
                            columnChart = new Chart(ctx, {
                                type: 'bar', // Use 'bar' for column chart
                                data: {
                                    labels: labels,
                                    datasets: [{
                                        label: 'Doanh Thu',
                                        data: chartData,
                                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                        borderColor: 'rgba(75, 192, 192, 1)',
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        x: {
                                            type: 'category',
                                            labels: labels
                                        },
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            });
                        } else {
                            // Nếu biểu đồ đã tồn tại, cập nhật dữ liệu và nhãn
                            columnChart.data.labels = labels;
                            columnChart.data.datasets[0].data = chartData;
                            columnChart.update();
                        }
                    } catch (error) {
                        console.error('Error fetching data:', error.message);
                    }
                }

                fetchDataTop();

                return false;
            }

        </script>
</body>

</html>